{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Content","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","MarkedHeader","HeaderDate","MarkdownContent","__webpack_exports__","_ref","post","data","markdownRemark","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","frontmatter","date","fields","readingTime","text","dangerouslySetInnerHTML","__html","html","pageQuery","StaticQueryContext","React","createContext","StaticQuery","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","array","arrayOf","styled_base_browser_esm","SiteHeader","Header","siteTitle","core_browser_esm","Footer","Layout","gatsby_browser_entry","react_default","Fragment","header","layout_Content","Date","getFullYear","_755544856","node"],"mappings":"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","file":"component---src-templates-blog-post-js-951c0e03005ebb5408de.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst MarkedHeader = styled.h1`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(255, 250, 150, 0.15),\n    rgba(255, 250, 150, 0.8) 100%,\n    rgba(255, 250, 150, 0.25)\n  );\n`\n\nconst HeaderDate = styled.h3`\n  margin-top: 10px;\n  color: #606060;\n`\n\n// STYLE THE TAGS INSIDE THE MARKDOWN HERE\nconst MarkdownContent = styled.div`\n  a {\n    text-decoration: none;\n    position: relative;\n  }\n\n  a::after {\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    top: 70%;\n    left: -0.1px;\n    right: -0.1px;\n    bottom: 0;\n    transition: top 0.1s ease-in-out;\n    background-color: rgba(255, 250, 150, 0.8);\n  }\n\n  a:hover::after {\n    top: 0;\n  }\n`\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <SEO title={post.frontmatter.title} />\n      <Content>\n        <MarkedHeader>{post.frontmatter.title}</MarkedHeader>\n        <HeaderDate>\n          {post.frontmatter.date} - {post.fields.readingTime.text}\n        </HeaderDate>\n        <MarkdownContent dangerouslySetInnerHTML={{ __html: post.html }} />\n      </Content>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"DD MMMM, YYYY\")\n        path\n        title\n      }\n      fields {\n        readingTime {\n          text\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Content = styled.div`\n  max-width: 860px;\n  padding: 1rem 1.0875rem;\n  font-size: 1.2rem;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst GitHubLink = styled.a`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst HomeLink = styled(NavLink)`\n  margin-left: 0;\n`\n\nconst SiteHeader = styled.header`\n  background: transparent;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n`\n\nconst Header = ({ siteTitle }) => (\n  <SiteHeader>\n    <Content>\n      {/* <p>\n        <HomeLink to=\"/\">{siteTitle}</HomeLink>\n        <NavLink to=\"/blog\">Blog</NavLink>\n        <GitHubLink href=\"https://github.com/niklasmtj/gatsby-starter-julia\">GitHub</GitHubLink>\n      </p> */}\n    </Content>\n  </SiteHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 0 1.0875rem 1rem;\n  padding-top: 0;\n`\n\nconst GatsbyLink = styled.a`\n  margin-left: 5px;\n`\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: center;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Content>\n          <main>{children}</main>\n          <Footer>\n            © {new Date().getFullYear()} Marius Toc, London.\n          </Footer>\n        </Content>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}